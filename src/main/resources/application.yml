spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${DATABASE_HOST:localhost}:${DATABASE_PORT:3306}/${DATABASE_NAME:gotcha}
    username: ${DATABASE_USER:root}
    password: ${DATABASE_PASSWORD:password}

  jpa:
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true
    properties:
      hibernate:
        default_batch_fetch_size: 1000
        dialect: org.hibernate.dialect.MySQLDialect

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          timeout: 5000
          starttls:
            enable: true

  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASS:}

jwt:
  secret-key: ${JWT_KEY:gotchaSecretKey_mN8xG4zH2K9YtR7mN1BvLpZ5QwX3T6JpC2DfV5LqZ7YgR8K1N9BvM3X6T2D}
  access-expiration: ${JWT_ACCESS_EXPIRATION:1800000} #30분
  refresh-expiration: ${JWT_REFRESH_EXPIRATION:86400000} #1일
  auto-login-refresh-expiration: ${JWT_AUTO_REFRESH_EXPIRATION:1209600000} #14일
  issuer: ${JWT_ISSUER:gotcha!}

token:
  refresh:
    in-cookie: ${COOKIE_REFRESH_EXPIRATION:1209600} #14일
    in-redis: ${REDIS_REFRESH_EXPIRATION:1209600} #14일

cache:
  ttl: ${CACHE_TTL:60}

mail:
  sender: Gotcha!
  subject: "[Gotcha!] 이메일 인증을 완료해주세요."