name: Continuous Integration

on:
  pull_request:
    branches: [ "develop" ]
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
          - info
          - warning
          - debug
      tags:
        description: 'Test scenario tags'
        required: false
        type: boolean
      environment:
        description: 'Environment to run tests against'
        type: environment
        required: false

permissions:
  contents: read

jobs:
  develop-test:
    runs-on: ubuntu-24.04

    steps:
      # 1. Node.js 설치 (AsyncAPI CLI 실행용)
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # 2. Compare branch 코드 내려 받기
      - name: Checkout PR
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      # 3. AsyncAPI Generator 전역 설치
      - name: Install AsyncAPI Generator
        run: npm install -g @asyncapi/generator

      # 4. AsyncAPI → HTML 문서 자동 생성
      - name: Generate HTML Docs
        run: |
          npx @asyncapi/generator gotcha-socket/asyncapi.yaml @asyncapi/html-template -o src/main/resources/static/docs

      # 5. 문서 변경사항 커밋 & 푸시
      - name: Commit and Push Generated Docs
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git add src/main/resources/static/docs
          git commit -m "Auto-update AsyncAPI docs"
          git push || echo "Nothing to push"

      # 6. 자바 환경 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # 7. 테스트를 위한 DB 설정
      - name: Setup MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          mysql database: ${{ secrets.MYSQL_TEST_DATABASE }}
          mysql user: ${{ secrets.MYSQL_TEST_USER }}
          mysql password: ${{ secrets.MYSQL_TEST_PASSWORD }}

      - name: List generated docs
        run: |
          echo "=== Generated Docs File List ==="
          ls -l src/main/resources/static/docs
          echo "=== Sample content from index.html ==="
          head -30 src/main/resources/static/docs/index.html
          

      # 8. Gradlew 실행 권한 설정
      - name: Run chmod to make gradlew executable
        run: chmod +x ./gradlew

      # 9. Gradle Test 실행
      - name: Build with Gradle
        uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25
        with:
          arguments: build -x test


